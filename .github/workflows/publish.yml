name: Publish to JSR

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Run in dry-run mode (no actual publish)"
        required: false
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

permissions:
  contents: read
  id-token: write

jobs:
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true

      - name: Run lint checks
        run: deno lint

  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true

      - name: Check code format
        run: deno fmt --check

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true

      - name: Run type checks
        run: deno task check

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint-check, format-check, type-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true

      - name: Run tests
        run: deno task test:unit

  publish:
    name: Publish to JSR
    runs-on: ubuntu-latest
    needs: [unit-test]
    environment: registry
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true

      - name: Dry run publish
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry-run == 'true'
        run: deno publish --dry-run

      - name: Publish to JSR
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry-run == 'false')
        run: deno publish

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: publish
    if: always()
    steps:
      - name: Notify success
        if: needs.publish.result == 'success'
        run: |
          echo "Deployed successfully!"
          echo "Commit: ${{ github.sha }}"
          echo "Timestamp: $(date -u)"
      - name: Notify failure
        if: needs.publish.result == 'failure'
        run: |
          echo "Deployment failed!"
          echo "Please check the deployment logs and try again."
          exit 1
